# Single stage Docker build for Digital Ocean deployment
# This uses pre-built assets since Digital Ocean can build from source
FROM node:20-alpine

# Create app user for security
RUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001

# Set working directory
WORKDIR /app

# Copy package files for production dependencies
COPY story-generator/package*.json ./

# Install production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy pre-built application (Digital Ocean builds from source)
# The build process should run: npm run install:all && npm run build before Docker
COPY --chown=nodejs:nodejs story-generator/dist/story-generator ./dist/story-generator

# Set environment variables
ENV NODE_ENV=production
ENV PORT=8080

# Expose port
EXPOSE 8080

# Switch to app user for security
USER nodejs

# Health check for Digital Ocean monitoring
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:8080/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }).on('error', () => process.exit(1))" || exit 1

# Start the application
CMD ["node", "dist/story-generator/server/server.mjs"]